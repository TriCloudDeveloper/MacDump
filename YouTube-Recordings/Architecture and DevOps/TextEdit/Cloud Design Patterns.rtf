{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red32\green32\blue32;\red255\green255\blue255;\red22\green22\blue22;
\red26\green28\blue40;}
{\*\expandedcolortbl;;\cssrgb\c16863\c16863\c16863;\cssrgb\c100000\c100000\c100000;\cssrgb\c11373\c11373\c11373;
\cssrgb\c13333\c14902\c20784;}
\margl1440\margr1440\vieww10840\viewh8760\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Cloud Design Patterns\
\
Snapshot pattern\
Data backups; copy of OS and data;\
\
Stamp Pattern\
Server replication\
\
Scale-up Pattern\
Dynamic Server spec up/down\
\
\
Scale-out Pattern \
Dynamic increase in number of servers\
\
\
On demand Dish pattern\
Dynamic increase/decrease of disk capacity\
\
\
\
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\
\
Microservices containerization patterns\
\
Microservice Ambassador\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \expnd0\expndtw0\kerning0
access to shared components that perform common utility tasks; host virtualized copies of the utility components; \'a0ambassador can act as an efficient proxy between the microservices and the utility components.;
\fs32 \
\

\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Decomposition by Capability\
into small Services that are single responsibility principle; \
\
by subdomain; \
God classes (capabilities that are common among multiple services; action / verbs); DDD and bounded context; Domain model into subdomains; Each subdomain will have a model called bounded context; \
\
\
Strangler\
Monolithic to micro services; split into different domains as separate services;\
\
Integration - API GW\
\
\
\
\
=-=\'97=-=-=-==-=-\
\
https://dzone.com/articles/design-patterns-for-microservices\
\
\
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 \expnd0\expndtw0\kerning0
\'a0Lambda can fix certain cloud design problems\
\
Event-driven architecture will replace manually activated solutions.\
\cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
\cf4 \cb3 \expnd0\expndtw0\kerning0
Cloud Pattern Studio\
\
https://patterns.arcitura.com/cloud-computing-patterns\

\f1\fs36 \

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
-=-=-=-=-=-=-=-=-==-\
\
Software design patterns\
\
\
Patterns are a form of templates that are proven to help solve a problem or an issue.\
\
\
Asychronous request and reply\
Http Polling or Event Notification\
\
\
CQRS - Command and Query Responsibility Segregation\
Separate the READ and WRITE models\
\
Event Sourcing\
Event Store\
\
Retry\
Try again immediate / after some time; raise exception\
\
Circuit Breaker\
Fail fast\
\
\
SideCar\
Separation of concerns\
\
\
\
==\'97=\'97=-=-=-=-=-=-=-==-=\'97=-=-=-=\
\
\
\
Data Structures and algorithms\
Hash Tables\
Flexible data structure; stores items as key-value pairs; they are not ordered though\
\
Arrays\
Linear and indexed; sorting, searching, updating; Nested becomes Matrix; multi-dimensional;\
\
Sorting\
Built-in function; \
\
Trees\
Using nodes; non-linear data structure; binary trees (2 nodes for each parent); \
\
\
Graphs\
Depth-first = stack data structure; breadth-fast = queue data structure; graph traversal;\
\
Stacks and Queues\
LIFO = Stacks; FIFO = Queues; \
\
\
Recursion\
Used in Functional programming for iterative data; Loops are used in OOPs programming;\
\
\
Stack with recursion\
\
\
\
\
Binary search\
Requires sorted data; eliminates half in each step; \
\
Linked List\
Head node; runner technique; \
\
\
\
\
\
-=-=-=-=-=-=-=-==-\
\
\
\pard\pardeftab720\sl440\partightenfactor0

\f1\fs38 \cf5 \cb3 \expnd0\expndtw0\kerning0
A 
\b business capability
\b0  is something that a business does in order to 
\b generate value
\b0 . The set of capabilities for a given business depend on the type of business. For example, the capabilities of an insurance company typically include sales, marketing, underwriting, claims processing, billing, compliance, etc. Each business capability can be thought of as a 
\b service
\b0 , except it\'92s business-oriented rather than technical.\
\
\
\
-=-=-==-=-=-=-=-=\'97=-=
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
}